package view;

import com.formdev.flatlaf.FlatLightLaf;
import java.io.File;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import model.ComboModel;
import structure.Graph;
import structure.LinkType;
import structure.LoadGraphException;
import structure.Node;
import structure.NodeType;

public class App extends javax.swing.JFrame {
	
	private Graph graph = new Graph();
	
	private SpinnerNumberModel numberNodeModel = new SpinnerNumberModel(0, 0, 0, 1);
	private SpinnerNumberModel numberRestaurantModel = new SpinnerNumberModel(0, 0, 0, 1);
	private SpinnerNumberModel numberRecreationModel = new SpinnerNumberModel(0, 0, 0, 1);
	private SpinnerNumberModel numberCityModel = new SpinnerNumberModel(0, 0, 0, 1);
	
	private ComboModel<Node> firstNodeListModel = new ComboModel<>();
	private ComboModel<Node> secondNodeListModel = new ComboModel<>();
	private ComboModel<Node> firstCityListModel = new ComboModel<>();
	private ComboModel<Node> secondCityListModel = new ComboModel<>();
	
	/**
	 * Creates new form App
	 */
	public App() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        restaurantComparisonGroup = new javax.swing.ButtonGroup();
        culturalComparisonGroup = new javax.swing.ButtonGroup();
        openComparisonGroup = new javax.swing.ButtonGroup();
        graphFileChooser = new javax.swing.JFileChooser();
        counterPanel = new javax.swing.JPanel();
        cityCounterLabel = new javax.swing.JLabel();
        restaurantCounterLabel = new javax.swing.JLabel();
        recreationCounterLabel = new javax.swing.JLabel();
        departementalCounterLabel = new javax.swing.JLabel();
        nationalCounterLabel = new javax.swing.JLabel();
        highwayCounterLabel = new javax.swing.JLabel();
        dataPanel = new javax.swing.JTabbedPane();
        placeDataPanel = new javax.swing.JPanel();
        placePanel = new javax.swing.JPanel();
        placeNameLabel = new javax.swing.JLabel();
        placeNameField = new javax.swing.JTextField();
        placeCategoryLabel = new javax.swing.JLabel();
        placeCategoryField = new javax.swing.JTextField();
        neighborsSeparationPanel = new javax.swing.JPanel();
        neighborsSeparationLabel = new javax.swing.JLabel();
        neighborsSeparation = new javax.swing.JSeparator();
        jumpSelectorPanel = new javax.swing.JPanel();
        jumpLabel = new javax.swing.JLabel();
        jumpNumberSelectorPanel = new javax.swing.JPanel();
        jumpNumberSlider = new javax.swing.JSlider();
        jumpNumberSpinner = new javax.swing.JSpinner();
        jumpCategorySelectorPanel = new javax.swing.JPanel();
        recreationSelectorCheckBox = new javax.swing.JCheckBox();
        citySelectorCheckBox = new javax.swing.JCheckBox();
        restaurantSelectorCheckBox = new javax.swing.JCheckBox();
        linkDataPanel = new javax.swing.JPanel();
        linkPanel = new javax.swing.JPanel();
        linkcategoryLabel = new javax.swing.JLabel();
        linkCategoryField = new javax.swing.JTextField();
        linkDistanceLabel = new javax.swing.JLabel();
        linkDistanceField = new javax.swing.JTextField();
        relationSeparationPanel = new javax.swing.JPanel();
        relationSeparatorLabel = new javax.swing.JLabel();
        relationSeparator = new javax.swing.JSeparator();
        relationPanel = new javax.swing.JPanel();
        linkDepartureLabel = new javax.swing.JLabel();
        linkArrivalLabel = new javax.swing.JLabel();
        linkDepartureNameField = new javax.swing.JTextField();
        linkArrivalNameField = new javax.swing.JTextField();
        linkDepartureCategoryField = new javax.swing.JTextField();
        linkArrivalCategoryField = new javax.swing.JTextField();
        comparisonDataPanel = new javax.swing.JPanel();
        comparisonPanel = new javax.swing.JPanel();
        comparisonSelectorFirstCityLabel = new javax.swing.JLabel();
        comparisonSelectorSecondCityLabel = new javax.swing.JLabel();
        comparisonSelectorFirstCityComboBox = new javax.swing.JComboBox<>();
        comparisonSelectorSecondCityComboBox = new javax.swing.JComboBox<>();
        evaluationSeparatorPanel = new javax.swing.JPanel();
        evaluationSeparatorLabel = new javax.swing.JLabel();
        evaluationSeparator = new javax.swing.JSeparator();
        restaurantComparisonPanel = new javax.swing.JPanel();
        firstCityRestaurantComparisonRadio = new javax.swing.JRadioButton();
        restaurantComparisonLabel = new javax.swing.JLabel();
        secondCityRestaurantComparisonRadio = new javax.swing.JRadioButton();
        recreationComparisonPanel = new javax.swing.JPanel();
        firstCityRecreationComparisonRadio = new javax.swing.JRadioButton();
        recreationComparisonLabel = new javax.swing.JLabel();
        secondCityRecreationComparisonRadio = new javax.swing.JRadioButton();
        cityComparisonPanel = new javax.swing.JPanel();
        firstCityOpenComparisonRadio = new javax.swing.JRadioButton();
        cityComparisonLabel = new javax.swing.JLabel();
        secondCityOpenComparisonRadio = new javax.swing.JRadioButton();
        itineraryDataPanel = new javax.swing.JPanel();
        itinaryPanel = new javax.swing.JPanel();
        originItinaryLabel = new javax.swing.JLabel();
        destinationItinaryLabel = new javax.swing.JLabel();
        originItinaryComboBox = new javax.swing.JComboBox<>();
        destinationItinaryComboBox = new javax.swing.JComboBox<>();
        stepSeparationPanel = new javax.swing.JPanel();
        stepSeparationLabel = new javax.swing.JLabel();
        stepSeparation = new javax.swing.JSeparator();
        planningItinaryPanel = new javax.swing.JPanel();
        cityItinaryLabel = new javax.swing.JLabel();
        recreationItinaryLabel = new javax.swing.JLabel();
        restaurantItinaryLabel = new javax.swing.JLabel();
        cityItinarySpinner = new javax.swing.JSpinner();
        recreationItinarySpinner = new javax.swing.JSpinner();
        restaurantItinarySpinner = new javax.swing.JSpinner();
        submitPanel = new javax.swing.JPanel();
        submitButton = new javax.swing.JButton();
        graphPanel = new javax.swing.JScrollPane();
        graphLabel = new javax.swing.JLabel();
        MenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        closeMenuItem = new javax.swing.JMenuItem();
        HelpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        graphFileChooser.setCurrentDirectory(new File("."));

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Graph Map Analysis");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(800, 480));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        counterPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        counterPanel.setPreferredSize(new java.awt.Dimension(720, 60));
        counterPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 50, 20));

        cityCounterLabel.setText("Villes : 0");
        counterPanel.add(cityCounterLabel);

        restaurantCounterLabel.setText("Restaurants : 0");
        counterPanel.add(restaurantCounterLabel);

        recreationCounterLabel.setText("Loisirs : 0");
        counterPanel.add(recreationCounterLabel);

        departementalCounterLabel.setText("Départementales : 0");
        counterPanel.add(departementalCounterLabel);

        nationalCounterLabel.setText("Nationales : 0");
        counterPanel.add(nationalCounterLabel);

        highwayCounterLabel.setText("Autoroutes : 0");
        counterPanel.add(highwayCounterLabel);

        getContentPane().add(counterPanel, java.awt.BorderLayout.SOUTH);

        dataPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dataPanel.setMinimumSize(new java.awt.Dimension(183, 104));
        dataPanel.setPreferredSize(new java.awt.Dimension(334, 100));

        placeDataPanel.setLayout(new javax.swing.BoxLayout(placeDataPanel, javax.swing.BoxLayout.PAGE_AXIS));

        placePanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 5, 20, 40));
        placePanel.setMaximumSize(new java.awt.Dimension(32767, 100));
        placePanel.setMinimumSize(new java.awt.Dimension(183, 104));
        placePanel.setLayout(new java.awt.GridLayout(0, 2, 0, 20));

        placeNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        placeNameLabel.setText("Nom");
        placePanel.add(placeNameLabel);

        placeNameField.setEditable(false);
        placePanel.add(placeNameField);

        placeCategoryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        placeCategoryLabel.setText("Catégorie");
        placePanel.add(placeCategoryLabel);

        placeCategoryField.setEditable(false);
        placeCategoryField.setMaximumSize(new java.awt.Dimension(2147483647, 10));
        placePanel.add(placeCategoryField);

        placeDataPanel.add(placePanel);

        neighborsSeparationPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 0, 20, 0));

        neighborsSeparationLabel.setText("Voisins");

        neighborsSeparation.setPreferredSize(new java.awt.Dimension(200, 5));

        javax.swing.GroupLayout neighborsSeparationPanelLayout = new javax.swing.GroupLayout(neighborsSeparationPanel);
        neighborsSeparationPanel.setLayout(neighborsSeparationPanelLayout);
        neighborsSeparationPanelLayout.setHorizontalGroup(
            neighborsSeparationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(neighborsSeparationPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(neighborsSeparationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(neighborsSeparation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        neighborsSeparationPanelLayout.setVerticalGroup(
            neighborsSeparationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(neighborsSeparationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(neighborsSeparation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(neighborsSeparationLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        placeDataPanel.add(neighborsSeparationPanel);

        jumpSelectorPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 25));

        jumpLabel.setText("Nombre de sauts");
        jumpSelectorPanel.add(jumpLabel);

        jumpNumberSlider.setMaximum(0);
        jumpNumberSlider.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jumpNumberSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jumpNumberSliderStateChanged(evt);
            }
        });
        jumpNumberSelectorPanel.add(jumpNumberSlider);

        jumpNumberSpinner.setModel(numberNodeModel);
        jumpNumberSpinner.setToolTipText("");
        jumpNumberSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jumpNumberSpinnerStateChanged(evt);
            }
        });
        jumpNumberSelectorPanel.add(jumpNumberSpinner);

        jumpSelectorPanel.add(jumpNumberSelectorPanel);

        jumpCategorySelectorPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 5));

        recreationSelectorCheckBox.setSelected(true);
        recreationSelectorCheckBox.setText("Loisirs");
        jumpCategorySelectorPanel.add(recreationSelectorCheckBox);

        citySelectorCheckBox.setSelected(true);
        citySelectorCheckBox.setText("Villes");
        jumpCategorySelectorPanel.add(citySelectorCheckBox);

        restaurantSelectorCheckBox.setSelected(true);
        restaurantSelectorCheckBox.setText("Restaurants");
        jumpCategorySelectorPanel.add(restaurantSelectorCheckBox);

        jumpSelectorPanel.add(jumpCategorySelectorPanel);

        placeDataPanel.add(jumpSelectorPanel);

        dataPanel.addTab("Emplacement", placeDataPanel);

        linkDataPanel.setLayout(new javax.swing.BoxLayout(linkDataPanel, javax.swing.BoxLayout.PAGE_AXIS));

        linkPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 5, 20, 40));
        linkPanel.setMaximumSize(new java.awt.Dimension(32767, 105));
        linkPanel.setLayout(new java.awt.GridLayout(0, 2, 0, 20));

        linkcategoryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        linkcategoryLabel.setText("Catégorie");
        linkPanel.add(linkcategoryLabel);

        linkCategoryField.setEditable(false);
        linkPanel.add(linkCategoryField);

        linkDistanceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        linkDistanceLabel.setText("Kilométrage");
        linkPanel.add(linkDistanceLabel);

        linkDistanceField.setEditable(false);
        linkDistanceField.setMaximumSize(new java.awt.Dimension(2147483647, 10));
        linkPanel.add(linkDistanceField);

        linkDataPanel.add(linkPanel);

        relationSeparationPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 0, 20, 0));

        relationSeparatorLabel.setText("Relation");

        relationSeparator.setPreferredSize(new java.awt.Dimension(200, 5));

        javax.swing.GroupLayout relationSeparationPanelLayout = new javax.swing.GroupLayout(relationSeparationPanel);
        relationSeparationPanel.setLayout(relationSeparationPanelLayout);
        relationSeparationPanelLayout.setHorizontalGroup(
            relationSeparationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(relationSeparationPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(relationSeparatorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(relationSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        relationSeparationPanelLayout.setVerticalGroup(
            relationSeparationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(relationSeparationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(relationSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(relationSeparatorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        linkDataPanel.add(relationSeparationPanel);

        relationPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        relationPanel.setMaximumSize(new java.awt.Dimension(32767, 150));
        relationPanel.setMinimumSize(new java.awt.Dimension(198, 150));
        relationPanel.setLayout(new java.awt.GridLayout(0, 2, 30, 20));

        linkDepartureLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        linkDepartureLabel.setText("Départ");
        relationPanel.add(linkDepartureLabel);

        linkArrivalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        linkArrivalLabel.setText("Arrivée");
        relationPanel.add(linkArrivalLabel);

        linkDepartureNameField.setEditable(false);
        linkDepartureNameField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        relationPanel.add(linkDepartureNameField);

        linkArrivalNameField.setEditable(false);
        linkArrivalNameField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        relationPanel.add(linkArrivalNameField);

        linkDepartureCategoryField.setEditable(false);
        linkDepartureCategoryField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        relationPanel.add(linkDepartureCategoryField);

        linkArrivalCategoryField.setEditable(false);
        linkArrivalCategoryField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        relationPanel.add(linkArrivalCategoryField);

        linkDataPanel.add(relationPanel);

        dataPanel.addTab("Route", linkDataPanel);

        comparisonDataPanel.setLayout(new javax.swing.BoxLayout(comparisonDataPanel, javax.swing.BoxLayout.PAGE_AXIS));

        comparisonPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        comparisonPanel.setMaximumSize(new java.awt.Dimension(32767, 100));
        comparisonPanel.setMinimumSize(new java.awt.Dimension(214, 100));
        comparisonPanel.setLayout(new java.awt.GridLayout(0, 2, 30, 20));

        comparisonSelectorFirstCityLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        comparisonSelectorFirstCityLabel.setText("Ville n°1");
        comparisonPanel.add(comparisonSelectorFirstCityLabel);

        comparisonSelectorSecondCityLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        comparisonSelectorSecondCityLabel.setText("Ville n°2");
        comparisonPanel.add(comparisonSelectorSecondCityLabel);

        comparisonSelectorFirstCityComboBox.setModel(firstCityListModel);
        comparisonPanel.add(comparisonSelectorFirstCityComboBox);

        comparisonSelectorSecondCityComboBox.setModel(secondCityListModel);
        comparisonPanel.add(comparisonSelectorSecondCityComboBox);

        comparisonDataPanel.add(comparisonPanel);

        evaluationSeparatorPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 0, 20, 0));

        evaluationSeparatorLabel.setText("Evaluation");

        evaluationSeparator.setPreferredSize(new java.awt.Dimension(200, 5));

        javax.swing.GroupLayout evaluationSeparatorPanelLayout = new javax.swing.GroupLayout(evaluationSeparatorPanel);
        evaluationSeparatorPanel.setLayout(evaluationSeparatorPanelLayout);
        evaluationSeparatorPanelLayout.setHorizontalGroup(
            evaluationSeparatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(evaluationSeparatorPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(evaluationSeparatorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(evaluationSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        evaluationSeparatorPanelLayout.setVerticalGroup(
            evaluationSeparatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(evaluationSeparatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(evaluationSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(evaluationSeparatorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        comparisonDataPanel.add(evaluationSeparatorPanel);

        restaurantComparisonPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        restaurantComparisonPanel.setMaximumSize(new java.awt.Dimension(32767, 50));
        restaurantComparisonPanel.setMinimumSize(new java.awt.Dimension(135, 50));
        restaurantComparisonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 5));

        restaurantComparisonGroup.add(firstCityRestaurantComparisonRadio);
        firstCityRestaurantComparisonRadio.setEnabled(false);
        restaurantComparisonPanel.add(firstCityRestaurantComparisonRadio);

        restaurantComparisonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        restaurantComparisonLabel.setText("Gastonomique");
        restaurantComparisonLabel.setPreferredSize(new java.awt.Dimension(100, 16));
        restaurantComparisonPanel.add(restaurantComparisonLabel);

        restaurantComparisonGroup.add(secondCityRestaurantComparisonRadio);
        secondCityRestaurantComparisonRadio.setEnabled(false);
        restaurantComparisonPanel.add(secondCityRestaurantComparisonRadio);

        comparisonDataPanel.add(restaurantComparisonPanel);

        recreationComparisonPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        recreationComparisonPanel.setMaximumSize(new java.awt.Dimension(32767, 50));
        recreationComparisonPanel.setMinimumSize(new java.awt.Dimension(135, 50));
        recreationComparisonPanel.setPreferredSize(new java.awt.Dimension(198, 50));
        recreationComparisonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 5));

        culturalComparisonGroup.add(firstCityRecreationComparisonRadio);
        firstCityRecreationComparisonRadio.setEnabled(false);
        recreationComparisonPanel.add(firstCityRecreationComparisonRadio);

        recreationComparisonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        recreationComparisonLabel.setText("Culturelle");
        recreationComparisonLabel.setPreferredSize(new java.awt.Dimension(100, 16));
        recreationComparisonPanel.add(recreationComparisonLabel);

        culturalComparisonGroup.add(secondCityRecreationComparisonRadio);
        secondCityRecreationComparisonRadio.setEnabled(false);
        recreationComparisonPanel.add(secondCityRecreationComparisonRadio);

        comparisonDataPanel.add(recreationComparisonPanel);

        cityComparisonPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        cityComparisonPanel.setMaximumSize(new java.awt.Dimension(32767, 50));
        cityComparisonPanel.setMinimumSize(new java.awt.Dimension(135, 50));
        cityComparisonPanel.setPreferredSize(new java.awt.Dimension(198, 50));
        cityComparisonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 5));

        openComparisonGroup.add(firstCityOpenComparisonRadio);
        firstCityOpenComparisonRadio.setEnabled(false);
        cityComparisonPanel.add(firstCityOpenComparisonRadio);

        cityComparisonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cityComparisonLabel.setText("Ouvert");
        cityComparisonLabel.setPreferredSize(new java.awt.Dimension(100, 16));
        cityComparisonPanel.add(cityComparisonLabel);

        openComparisonGroup.add(secondCityOpenComparisonRadio);
        secondCityOpenComparisonRadio.setEnabled(false);
        cityComparisonPanel.add(secondCityOpenComparisonRadio);

        comparisonDataPanel.add(cityComparisonPanel);

        dataPanel.addTab("Comparaisons", comparisonDataPanel);

        itineraryDataPanel.setLayout(new javax.swing.BoxLayout(itineraryDataPanel, javax.swing.BoxLayout.PAGE_AXIS));

        itinaryPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        itinaryPanel.setMaximumSize(new java.awt.Dimension(32767, 100));
        itinaryPanel.setMinimumSize(new java.awt.Dimension(274, 100));
        itinaryPanel.setLayout(new java.awt.GridLayout(0, 2, 30, 20));

        originItinaryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        originItinaryLabel.setText("Origine");
        itinaryPanel.add(originItinaryLabel);

        destinationItinaryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        destinationItinaryLabel.setText("Destination");
        itinaryPanel.add(destinationItinaryLabel);

        originItinaryComboBox.setModel(firstNodeListModel);
        itinaryPanel.add(originItinaryComboBox);

        destinationItinaryComboBox.setModel(secondNodeListModel);
        itinaryPanel.add(destinationItinaryComboBox);

        itineraryDataPanel.add(itinaryPanel);

        stepSeparationPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 0, 20, 0));

        stepSeparationLabel.setText("Etapes");

        stepSeparation.setPreferredSize(new java.awt.Dimension(200, 5));

        javax.swing.GroupLayout stepSeparationPanelLayout = new javax.swing.GroupLayout(stepSeparationPanel);
        stepSeparationPanel.setLayout(stepSeparationPanelLayout);
        stepSeparationPanelLayout.setHorizontalGroup(
            stepSeparationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stepSeparationPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(stepSeparationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(stepSeparation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        stepSeparationPanelLayout.setVerticalGroup(
            stepSeparationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stepSeparationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(stepSeparation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(stepSeparationLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        itineraryDataPanel.add(stepSeparationPanel);

        planningItinaryPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        planningItinaryPanel.setMaximumSize(new java.awt.Dimension(32767, 100));
        planningItinaryPanel.setLayout(new java.awt.GridLayout(0, 3, 40, 20));

        cityItinaryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cityItinaryLabel.setText("Villes");
        planningItinaryPanel.add(cityItinaryLabel);

        recreationItinaryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        recreationItinaryLabel.setText("Loisirs");
        planningItinaryPanel.add(recreationItinaryLabel);

        restaurantItinaryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        restaurantItinaryLabel.setText("Restaurants");
        planningItinaryPanel.add(restaurantItinaryLabel);

        cityItinarySpinner.setModel(numberCityModel);
        cityItinarySpinner.setToolTipText("");
        planningItinaryPanel.add(cityItinarySpinner);

        recreationItinarySpinner.setModel(numberRecreationModel);
        recreationItinarySpinner.setToolTipText("");
        planningItinaryPanel.add(recreationItinarySpinner);

        restaurantItinarySpinner.setModel(numberRestaurantModel);
        restaurantItinarySpinner.setToolTipText("");
        planningItinaryPanel.add(restaurantItinarySpinner);

        itineraryDataPanel.add(planningItinaryPanel);

        submitPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 0, 20, 0));
        submitPanel.setLayout(new javax.swing.BoxLayout(submitPanel, javax.swing.BoxLayout.LINE_AXIS));

        submitButton.setText("Valider");
        submitPanel.add(submitButton);

        itineraryDataPanel.add(submitPanel);

        dataPanel.addTab("Itinéraires", itineraryDataPanel);

        getContentPane().add(dataPanel, java.awt.BorderLayout.EAST);

        graphPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        graphPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        graphPanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        graphPanel.setPreferredSize(new java.awt.Dimension(500, 424));

        graphLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        graphLabel.setText("GRAPHE");
        graphPanel.setViewportView(graphLabel);

        getContentPane().add(graphPanel, java.awt.BorderLayout.CENTER);

        fileMenu.setText("Fichier");

        openMenuItem.setText("Ouvrir");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        closeMenuItem.setText("Quitter");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(closeMenuItem);

        MenuBar.add(fileMenu);

        HelpMenu.setText("?");

        aboutMenuItem.setText("A propos");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        HelpMenu.add(aboutMenuItem);

        MenuBar.add(HelpMenu);

        setJMenuBar(MenuBar);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
	
	private void confirmExit() {
		int retour = JOptionPane.showConfirmDialog(this, "Souhaitez-vous vraiment quitter l'application ?", "Attention", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
		if (retour == JOptionPane.OK_OPTION) {
			System.exit(0);
		}
	}
	
    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
		int retour = graphFileChooser.showOpenDialog(this);
		if (retour == javax.swing.JFileChooser.APPROVE_OPTION) {
			String fileName = graphFileChooser.getSelectedFile().getAbsolutePath();
			try {
				graph.load(fileName);
				int nbCity = graph.getNumberNodeType(NodeType.CITY);
				int nbRestaurant = graph.getNumberNodeType(NodeType.RESTAURANT);
				int nbRecreation = graph.getNumberNodeType(NodeType.RECREATION);
				cityCounterLabel.setText("Villes : " + nbCity);
				restaurantCounterLabel.setText("Restaurants : " + nbRestaurant);
				recreationCounterLabel.setText("Loisirs : " + nbRecreation);
				departementalCounterLabel.setText("Départmentales : " + graph.getNumberLinkType(LinkType.DEPARTMENTAL));
				nationalCounterLabel.setText("Nationales : " + graph.getNumberLinkType(LinkType.NATIONAL));
				highwayCounterLabel.setText("Autoroutes : " + graph.getNumberLinkType(LinkType.HIGHWAY));
				int nbNodes = graph.getNumberNodeType() - 1;
				jumpNumberSlider.setValue(0);
				jumpNumberSlider.setMaximum(nbNodes);
				numberNodeModel.setValue(0);
				numberNodeModel.setMaximum(nbNodes);
				List<Node> cityNodes = graph.getNodes(NodeType.CITY);
				firstCityListModel.addAll(cityNodes, 0);
				secondCityListModel.addAll(cityNodes, 1);
				List<Node> nodes = graph.getNodes();
				firstNodeListModel.addAll(nodes, 0);
				secondNodeListModel.addAll(nodes, 1);
				numberRestaurantModel.setValue(0);
				numberRestaurantModel.setMaximum(nbRestaurant);
				numberRecreationModel.setValue(0);
				numberRecreationModel.setMaximum(nbRecreation);
				numberCityModel.setValue(0);
				numberCityModel.setMaximum(nbCity);
			} catch (LoadGraphException e) {
				JOptionPane.showConfirmDialog(this, e.getMessage(), "Erreur", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
			}
		}
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuItemActionPerformed
        confirmExit();
    }//GEN-LAST:event_closeMenuItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        confirmExit();
    }//GEN-LAST:event_formWindowClosing

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        JOptionPane.showConfirmDialog(this, "Graph Map Analysis - Application Java - Version 1.0", "A propos", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void jumpNumberSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jumpNumberSliderStateChanged
		jumpNumberSpinner.setValue(jumpNumberSlider.getValue());
    }//GEN-LAST:event_jumpNumberSliderStateChanged

    private void jumpNumberSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jumpNumberSpinnerStateChanged
		jumpNumberSlider.setValue((int)jumpNumberSpinner.getValue());
    }//GEN-LAST:event_jumpNumberSpinnerStateChanged

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		try {
			UIManager.setLookAndFeel(new FlatLightLaf());
		} catch(UnsupportedLookAndFeelException e) {
			System.err.println("Failed to initialize LaF");
		}

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(() -> new App().setVisible(true));
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu HelpMenu;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JLabel cityComparisonLabel;
    private javax.swing.JPanel cityComparisonPanel;
    private javax.swing.JLabel cityCounterLabel;
    private javax.swing.JLabel cityItinaryLabel;
    private javax.swing.JSpinner cityItinarySpinner;
    private javax.swing.JCheckBox citySelectorCheckBox;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JPanel comparisonDataPanel;
    private javax.swing.JPanel comparisonPanel;
    private javax.swing.JComboBox<Node> comparisonSelectorFirstCityComboBox;
    private javax.swing.JLabel comparisonSelectorFirstCityLabel;
    private javax.swing.JComboBox<Node> comparisonSelectorSecondCityComboBox;
    private javax.swing.JLabel comparisonSelectorSecondCityLabel;
    private javax.swing.JPanel counterPanel;
    private javax.swing.ButtonGroup culturalComparisonGroup;
    private javax.swing.JTabbedPane dataPanel;
    private javax.swing.JLabel departementalCounterLabel;
    private javax.swing.JComboBox<Node> destinationItinaryComboBox;
    private javax.swing.JLabel destinationItinaryLabel;
    private javax.swing.JSeparator evaluationSeparator;
    private javax.swing.JLabel evaluationSeparatorLabel;
    private javax.swing.JPanel evaluationSeparatorPanel;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JRadioButton firstCityOpenComparisonRadio;
    private javax.swing.JRadioButton firstCityRecreationComparisonRadio;
    private javax.swing.JRadioButton firstCityRestaurantComparisonRadio;
    private javax.swing.JFileChooser graphFileChooser;
    private javax.swing.JLabel graphLabel;
    private javax.swing.JScrollPane graphPanel;
    private javax.swing.JLabel highwayCounterLabel;
    private javax.swing.JPanel itinaryPanel;
    private javax.swing.JPanel itineraryDataPanel;
    private javax.swing.JPanel jumpCategorySelectorPanel;
    private javax.swing.JLabel jumpLabel;
    private javax.swing.JPanel jumpNumberSelectorPanel;
    private javax.swing.JSlider jumpNumberSlider;
    private javax.swing.JSpinner jumpNumberSpinner;
    private javax.swing.JPanel jumpSelectorPanel;
    private javax.swing.JTextField linkArrivalCategoryField;
    private javax.swing.JLabel linkArrivalLabel;
    private javax.swing.JTextField linkArrivalNameField;
    private javax.swing.JTextField linkCategoryField;
    private javax.swing.JPanel linkDataPanel;
    private javax.swing.JTextField linkDepartureCategoryField;
    private javax.swing.JLabel linkDepartureLabel;
    private javax.swing.JTextField linkDepartureNameField;
    private javax.swing.JTextField linkDistanceField;
    private javax.swing.JLabel linkDistanceLabel;
    private javax.swing.JPanel linkPanel;
    private javax.swing.JLabel linkcategoryLabel;
    private javax.swing.JLabel nationalCounterLabel;
    private javax.swing.JSeparator neighborsSeparation;
    private javax.swing.JLabel neighborsSeparationLabel;
    private javax.swing.JPanel neighborsSeparationPanel;
    private javax.swing.ButtonGroup openComparisonGroup;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JComboBox<Node> originItinaryComboBox;
    private javax.swing.JLabel originItinaryLabel;
    private javax.swing.JTextField placeCategoryField;
    private javax.swing.JLabel placeCategoryLabel;
    private javax.swing.JPanel placeDataPanel;
    private javax.swing.JTextField placeNameField;
    private javax.swing.JLabel placeNameLabel;
    private javax.swing.JPanel placePanel;
    private javax.swing.JPanel planningItinaryPanel;
    private javax.swing.JLabel recreationComparisonLabel;
    private javax.swing.JPanel recreationComparisonPanel;
    private javax.swing.JLabel recreationCounterLabel;
    private javax.swing.JLabel recreationItinaryLabel;
    private javax.swing.JSpinner recreationItinarySpinner;
    private javax.swing.JCheckBox recreationSelectorCheckBox;
    private javax.swing.JPanel relationPanel;
    private javax.swing.JPanel relationSeparationPanel;
    private javax.swing.JSeparator relationSeparator;
    private javax.swing.JLabel relationSeparatorLabel;
    private javax.swing.ButtonGroup restaurantComparisonGroup;
    private javax.swing.JLabel restaurantComparisonLabel;
    private javax.swing.JPanel restaurantComparisonPanel;
    private javax.swing.JLabel restaurantCounterLabel;
    private javax.swing.JLabel restaurantItinaryLabel;
    private javax.swing.JSpinner restaurantItinarySpinner;
    private javax.swing.JCheckBox restaurantSelectorCheckBox;
    private javax.swing.JRadioButton secondCityOpenComparisonRadio;
    private javax.swing.JRadioButton secondCityRecreationComparisonRadio;
    private javax.swing.JRadioButton secondCityRestaurantComparisonRadio;
    private javax.swing.JSeparator stepSeparation;
    private javax.swing.JLabel stepSeparationLabel;
    private javax.swing.JPanel stepSeparationPanel;
    private javax.swing.JButton submitButton;
    private javax.swing.JPanel submitPanel;
    // End of variables declaration//GEN-END:variables
}
